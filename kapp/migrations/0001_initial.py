# Generated by Django 5.0.3 on 2024-07-08 17:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(choices=[('Punjab & Sind', 'Punjab & Sind'), ('Bank of India', 'Bank of India'), ('Union Bank Of India', 'Union Bank Of India'), ('Canara Bank', 'Canara Bank'), ('SIDBI Bank', 'SIDBI Bank'), ('Bank Of Baroda', 'Bank Of Baroda'), ('Uco Bank', 'Uco Bank')], max_length=100)),
                ('branch_name', models.CharField(max_length=100)),
                ('loan_type', models.CharField(max_length=100)),
                ('loan_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rv_bank_account', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_name', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_contact_no', models.CharField(blank=True, max_length=15, null=True)),
                ('rv_aadhaar_no', models.CharField(blank=True, max_length=12, null=True)),
                ('rv_pan_no', models.CharField(blank=True, max_length=10, null=True)),
                ('rv_present_address', models.TextField(blank=True, null=True)),
                ('rv_permanent_address', models.TextField(blank=True, null=True)),
                ('rv_premises_is', models.BooleanField(blank=True, null=True)),
                ('rv_duration_to_stay', models.CharField(blank=True, max_length=50, null=True)),
                ('rv_landmark', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_ownership_proof_type', models.CharField(blank=True, choices=[('E-Bill/Water Tax', 'E-Bill/Water Tax')], max_length=20, null=True)),
                ('rv_e_bill_or_water_tax_document', models.FileField(blank=True, null=True, upload_to='rv_e_bill_water_tax_documents/')),
                ('rv_area_of_house', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_color_of_house', models.CharField(blank=True, max_length=50, null=True)),
                ('rv_num_of_persons_living', models.PositiveIntegerField(blank=True, null=True)),
                ('rv_num_of_persons_earning', models.PositiveIntegerField(blank=True, null=True)),
                ('rv_neighbour_name', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_neighbour_contact_no', models.CharField(blank=True, max_length=15, null=True)),
                ('rv_met_person_at_home', models.BooleanField(blank=True, null=True)),
                ('rv_relation_with_met_person', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_residency_status', models.CharField(blank=True, max_length=50, null=True)),
                ('ev_company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('ev_company_address', models.TextField(blank=True, null=True)),
                ('ev_date_of_joining', models.DateField(blank=True, null=True)),
                ('ev_designation_of_applicant', models.CharField(blank=True, max_length=100, null=True)),
                ('ev_details_confirmed_by', models.CharField(blank=True, max_length=100, null=True)),
                ('ev_staff_name', models.CharField(blank=True, max_length=100, null=True)),
                ('ev_staff_designation', models.CharField(blank=True, max_length=100, null=True)),
                ('ev_staff_contact_no', models.CharField(blank=True, max_length=15, null=True)),
                ('sev_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('sev_address', models.TextField(blank=True, null=True)),
                ('sev_details_confirmed_by', models.CharField(blank=True, max_length=100, null=True)),
                ('sev_relation_met_person_with_applicant', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_business_address', models.TextField(blank=True, null=True)),
                ('bv_gstin_udyam_others_no', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_num_of_employees', models.PositiveIntegerField(blank=True, null=True)),
                ('bv_landmark', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_nature_of_business', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_establishment_date', models.DateField(blank=True, null=True)),
                ('bv_designation_of_applicant', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_met_person_at_business_place', models.BooleanField(blank=True, null=True)),
                ('bv_relation_met_person_with_applicant', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_premises_is', models.BooleanField(blank=True, null=True)),
                ('bv_ownership_proof_type', models.CharField(blank=True, choices=[('E-Bill/Water Tax', 'E-Bill/Water Tax')], max_length=20, null=True)),
                ('bv_e_bill_or_water_tax_document', models.FileField(blank=True, null=True, upload_to='bv_e_bill_water_tax_documents/')),
                ('rv_constitution_of_buisness', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_date_of_visit', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FieldUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile_number', models.CharField(max_length=15, unique=True)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('pin_code', models.CharField(blank=True, max_length=10, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdharImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adhar_images', models.ImageField(blank=True, null=True, upload_to='adhar_images/')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adhar_images', to='kapp.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicantImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='applicant_images/')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='kapp.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicantImageBusiness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='applicant_images_business/')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='businessimages', to='kapp.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='BackgroundVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_in_affiliations', models.CharField(blank=True, max_length=100, null=True)),
                ('year_of_establishment', models.CharField(blank=True, max_length=100, null=True)),
                ('registration', models.CharField(blank=True, max_length=100, null=True)),
                ('award_won', models.BooleanField(blank=True, null=True)),
                ('any_change_in_reg_office', models.BooleanField(blank=True, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bg_verification', to='kapp.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='BalanceSheetAndPLAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year1', models.CharField(blank=True, max_length=100, null=True)),
                ('net_income1', models.IntegerField(blank=True, null=True)),
                ('year2', models.CharField(blank=True, max_length=100, null=True)),
                ('net_income2', models.IntegerField(blank=True, null=True)),
                ('year3', models.CharField(blank=True, max_length=100, null=True)),
                ('net_income3', models.IntegerField(blank=True, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='balance_sheet', to='kapp.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='Buyers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_buyers', models.CharField(blank=True, max_length=100, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyers', to='kapp.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='CoApplicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rv_bank_account', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_name', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_contact_no', models.CharField(blank=True, max_length=15, null=True)),
                ('rv_aadhaar_no', models.CharField(blank=True, max_length=12, null=True)),
                ('rv_pan_no', models.CharField(blank=True, max_length=10, null=True)),
                ('rv_present_address', models.TextField(blank=True, null=True)),
                ('rv_permanent_address', models.TextField(blank=True, null=True)),
                ('rv_premises_is', models.BooleanField(blank=True, null=True)),
                ('rv_duration_to_stay', models.CharField(blank=True, max_length=50, null=True)),
                ('rv_landmark', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_ownership_proof_type', models.CharField(blank=True, choices=[('E-Bill/Water Tax', 'E-Bill/Water Tax')], max_length=20, null=True)),
                ('rv_e_bill_or_water_tax_document', models.FileField(blank=True, null=True, upload_to='rv_e_bill_water_tax_documents/')),
                ('rv_area_of_house', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_color_of_house', models.CharField(blank=True, max_length=50, null=True)),
                ('rv_num_of_persons_living', models.PositiveIntegerField(blank=True, null=True)),
                ('rv_num_of_persons_earning', models.PositiveIntegerField(blank=True, null=True)),
                ('rv_neighbour_name', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_neighbour_contact_no', models.CharField(blank=True, max_length=15, null=True)),
                ('rv_met_person_at_home', models.BooleanField(blank=True, null=True)),
                ('rv_relation_with_met_person', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_residency_status', models.CharField(blank=True, max_length=50, null=True)),
                ('ev_company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('ev_company_address', models.TextField(blank=True, null=True)),
                ('ev_date_of_joining', models.DateField(blank=True, null=True)),
                ('ev_designation_of_applicant', models.CharField(blank=True, max_length=100, null=True)),
                ('ev_details_confirmed_by', models.CharField(blank=True, max_length=100, null=True)),
                ('ev_staff_name', models.CharField(blank=True, max_length=100, null=True)),
                ('ev_staff_designation', models.CharField(blank=True, max_length=100, null=True)),
                ('ev_staff_contact_no', models.CharField(blank=True, max_length=15, null=True)),
                ('sev_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('sev_address', models.TextField(blank=True, null=True)),
                ('sev_details_confirmed_by', models.CharField(blank=True, max_length=100, null=True)),
                ('sev_relation_met_person_with_applicant', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_business_address', models.TextField(blank=True, null=True)),
                ('bv_gstin_udyam_others_no', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_num_of_employees', models.PositiveIntegerField(blank=True, null=True)),
                ('bv_landmark', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_nature_of_business', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_establishment_date', models.DateField(blank=True, null=True)),
                ('bv_designation_of_applicant', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_met_person_at_business_place', models.BooleanField(blank=True, null=True)),
                ('bv_relation_met_person_with_applicant', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_premises_is', models.BooleanField(blank=True, null=True)),
                ('bv_ownership_proof_type', models.CharField(blank=True, choices=[('E-Bill/Water Tax', 'E-Bill/Water Tax')], max_length=20, null=True)),
                ('bv_e_bill_or_water_tax_document', models.FileField(blank=True, null=True, upload_to='bv_e_bill_water_tax_documents/')),
                ('rv_constitution_of_buisness', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_date_of_visit', models.DateField(blank=True, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coapplicants', to='kapp.applicant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CoApplicantImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='coapplicant_images/')),
                ('coapplicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='kapp.coapplicant')),
            ],
        ),
        migrations.CreateModel(
            name='CoApplicantImageBusiness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='coapplicant_images_business/')),
                ('coapplicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='businessimages', to='kapp.coapplicant')),
            ],
        ),
        migrations.CreateModel(
            name='DetailsOfAssociate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slno', models.IntegerField(blank=True, null=True)),
                ('name_of_buyers', models.CharField(blank=True, max_length=100, null=True)),
                ('nature_of_activity', models.CharField(blank=True, max_length=100, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details_of_associates', to='kapp.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='FinalConclusion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('financial', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('identity', models.CharField(blank=True, max_length=200, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='final_conclusion', to='kapp.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='GstImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gst_images', to='kapp.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='Guarantor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rv_bank_account', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_name', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_contact_no', models.CharField(blank=True, max_length=15, null=True)),
                ('rv_aadhaar_no', models.CharField(blank=True, max_length=12, null=True)),
                ('rv_pan_no', models.CharField(blank=True, max_length=10, null=True)),
                ('rv_present_address', models.TextField(blank=True, null=True)),
                ('rv_permanent_address', models.TextField(blank=True, null=True)),
                ('rv_premises_is', models.BooleanField(blank=True, null=True)),
                ('rv_duration_to_stay', models.CharField(blank=True, max_length=50, null=True)),
                ('rv_landmark', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_ownership_proof_type', models.CharField(blank=True, choices=[('E-Bill/Water Tax', 'E-Bill/Water Tax')], max_length=20, null=True)),
                ('rv_e_bill_or_water_tax_document', models.FileField(blank=True, null=True, upload_to='rv_e_bill_water_tax_documents/')),
                ('rv_area_of_house', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_color_of_house', models.CharField(blank=True, max_length=50, null=True)),
                ('rv_num_of_persons_living', models.PositiveIntegerField(blank=True, null=True)),
                ('rv_num_of_persons_earning', models.PositiveIntegerField(blank=True, null=True)),
                ('rv_neighbour_name', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_neighbour_contact_no', models.CharField(blank=True, max_length=15, null=True)),
                ('rv_met_person_at_home', models.BooleanField(blank=True, null=True)),
                ('rv_relation_with_met_person', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_residency_status', models.CharField(blank=True, max_length=50, null=True)),
                ('ev_company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('ev_company_address', models.TextField(blank=True, null=True)),
                ('ev_date_of_joining', models.DateField(blank=True, null=True)),
                ('ev_designation_of_applicant', models.CharField(blank=True, max_length=100, null=True)),
                ('ev_details_confirmed_by', models.CharField(blank=True, max_length=100, null=True)),
                ('ev_staff_name', models.CharField(blank=True, max_length=100, null=True)),
                ('ev_staff_designation', models.CharField(blank=True, max_length=100, null=True)),
                ('ev_staff_contact_no', models.CharField(blank=True, max_length=15, null=True)),
                ('sev_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('sev_address', models.TextField(blank=True, null=True)),
                ('sev_details_confirmed_by', models.CharField(blank=True, max_length=100, null=True)),
                ('sev_relation_met_person_with_applicant', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_business_address', models.TextField(blank=True, null=True)),
                ('bv_gstin_udyam_others_no', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_num_of_employees', models.PositiveIntegerField(blank=True, null=True)),
                ('bv_landmark', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_nature_of_business', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_establishment_date', models.DateField(blank=True, null=True)),
                ('bv_designation_of_applicant', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_met_person_at_business_place', models.BooleanField(blank=True, null=True)),
                ('bv_relation_met_person_with_applicant', models.CharField(blank=True, max_length=100, null=True)),
                ('bv_premises_is', models.BooleanField(blank=True, null=True)),
                ('bv_ownership_proof_type', models.CharField(blank=True, choices=[('E-Bill/Water Tax', 'E-Bill/Water Tax')], max_length=20, null=True)),
                ('bv_e_bill_or_water_tax_document', models.FileField(blank=True, null=True, upload_to='bv_e_bill_water_tax_documents/')),
                ('rv_constitution_of_buisness', models.CharField(blank=True, max_length=100, null=True)),
                ('rv_date_of_visit', models.DateField(blank=True, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guarantors', to='kapp.applicant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GuarantorImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='guarantor_images/')),
                ('guarantor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='kapp.guarantor')),
            ],
        ),
        migrations.CreateModel(
            name='GuarantorImageBusiness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='guarantor_images_business/')),
                ('guarantor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='businessimages', to='kapp.guarantor')),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_assets', models.IntegerField(blank=True, null=True)),
                ('policy_number', models.IntegerField(blank=True, null=True)),
                ('validity', models.CharField(blank=True, max_length=100, null=True)),
                ('sum_assured', models.IntegerField(blank=True, null=True)),
                ('risk_covered', models.CharField(blank=True, max_length=100, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_details', to='kapp.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='ItrVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year1', models.CharField(blank=True, max_length=100, null=True)),
                ('year2', models.CharField(blank=True, max_length=100, null=True)),
                ('year3', models.CharField(blank=True, max_length=100, null=True)),
                ('pan_y1', models.CharField(blank=True, max_length=100, null=True)),
                ('pan_y2', models.CharField(blank=True, max_length=100, null=True)),
                ('pan_y3', models.CharField(blank=True, max_length=100, null=True)),
                ('whether_itr_filler_properly_y1', models.CharField(blank=True, max_length=100, null=True)),
                ('whether_itr_filler_properly_y2', models.CharField(blank=True, max_length=100, null=True)),
                ('whether_itr_filler_properly_y3', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_itr_filling_y1', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_itr_filling_y2', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_itr_filling_y3', models.CharField(blank=True, max_length=100, null=True)),
                ('acknowledgement_y1', models.IntegerField(blank=True, null=True)),
                ('acknowledgement_y2', models.IntegerField(blank=True, null=True)),
                ('acknowledgement_y3', models.IntegerField(blank=True, null=True)),
                ('total_gross_income_y1', models.IntegerField(blank=True, null=True)),
                ('total_gross_income_y2', models.IntegerField(blank=True, null=True)),
                ('total_gross_income_y3', models.IntegerField(blank=True, null=True)),
                ('total_taxable_income_y1', models.IntegerField(blank=True, null=True)),
                ('total_taxable_income_y2', models.IntegerField(blank=True, null=True)),
                ('total_taxable_income_y3', models.IntegerField(blank=True, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itr_verification', to='kapp.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='ManufacturingEntities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_of_plot_accessibility_proximity_to_other_units', models.CharField(blank=True, max_length=100, null=True)),
                ('principal_raw_materials_and_sources', models.CharField(blank=True, max_length=100, null=True)),
                ('manufacturing_process', models.CharField(blank=True, max_length=100, null=True)),
                ('major_branded_and_imported_machines_installed', models.CharField(blank=True, max_length=100, null=True)),
                ('pollution_control', models.CharField(blank=True, max_length=100, null=True)),
                ('power_connected_load_and_backup_availability', models.CharField(blank=True, max_length=100, null=True)),
                ('inventory_wip_finished_goods_at_the_site', models.CharField(blank=True, max_length=100, null=True)),
                ('storage_security_perishability_susceptibility_to_fire_and_weather', models.CharField(blank=True, max_length=100, null=True)),
                ('quality_certification', models.CharField(blank=True, max_length=100, null=True)),
                ('workers_split_of_temporary_and_permanent_any_unions', models.CharField(blank=True, max_length=100, null=True)),
                ('history_of_any_strikes_any_child_labour_working_condition', models.CharField(blank=True, max_length=100, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manufacturing_entities', to='kapp.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='OtherParticulars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monnths_during_the_current_year', models.CharField(blank=True, max_length=100, null=True)),
                ('purchases', models.CharField(blank=True, max_length=100, null=True)),
                ('sales', models.CharField(blank=True, max_length=100, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_particulars', to='kapp.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='PanImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pan_images', models.ImageField(blank=True, null=True, upload_to='pan_images/')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pan_images', to='kapp.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalAssetsOfProprietor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_personal_assets', models.CharField(blank=True, max_length=100, null=True)),
                ('description_of_assets_owned', models.CharField(blank=True, max_length=100, null=True)),
                ('amount_in_rs', models.CharField(blank=True, max_length=100, null=True)),
                ('whether_any_security', models.CharField(blank=True, max_length=100, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personal_assets', to='kapp.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='PropertiesProposed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_property_identifier', models.CharField(blank=True, max_length=100, null=True)),
                ('name_of_property_1_owner', models.CharField(blank=True, max_length=100, null=True)),
                ('name_of_property_2_or_3_owner', models.CharField(blank=True, max_length=100, null=True)),
                ('address_property_1', models.CharField(blank=True, max_length=100, null=True)),
                ('address_property_2_or_3', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_visit', models.DateField(blank=True, null=True)),
                ('whether_original_title_deeds', models.BooleanField(blank=True, null=True)),
                ('types_of_documents', models.CharField(blank=True, max_length=100, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties_proposed', to='kapp.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='Suppliers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_suppliers', models.CharField(blank=True, max_length=100, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suppliers', to='kapp.applicant')),
            ],
        ),
    ]
